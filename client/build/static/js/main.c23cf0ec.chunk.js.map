{"version":3,"sources":["hoc/Aux/Aux.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","containers/Charts/RequestMethodsPie.js","containers/Charts/AnswerCodesPie.js","containers/Charts/ShortAnswersDoughnut.js","containers/Charts/RequestsPerMinuteChart.js","components/Welcome.js","App.js","serviceWorker.js","index.js"],"names":["aux","props","children","navigationItem","className","to","link","exact","activeClassName","navigationItems","drawerToggle","onClick","clicked","toolbar","drawerToggleClicked","backdrop","show","sideDrawer","attachedClasses","open","Aux","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","classes","Component","RequestMethodsPie","requests","colors","fetch","then","res","json","data","Object","values","rca","length","pastel","map","el","hex","width","height","margin","top","right","left","bottom","dataKey","entry","index","key","fill","strokeWidth","AnswerCodesPie","answers","updatedAnswers","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","payload","percent","value","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","d","stroke","r","toFixed","ShortAnswersDoughnut","activeIndex","sizeDistribution","updatedDistribution","updatedColors","console","log","counterSize","counter","activeShape","onMouseEnter","onPieEnter","RequestsPerMinuteChart","reqsPerMin","welcome","App","path","component","Welcome","Boolean","window","location","hostname","match","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c23cf0ec.chunk.js","sourcesContent":["const aux = (props) => props.children;\n\nexport default aux;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItem.css';\n\nconst navigationItem = ( props ) => (\n    <li className='NavigationItem'>\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName='active'>{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className='NavigationItems'>\n        {/* <NavigationItem link=\"/\" exact>Log Stats</NavigationItem> */}\n        <NavigationItem link=\"/requestMethods\">Request Methods Distribution</NavigationItem>\n        <NavigationItem link=\"/answerCodes\">Answer Status Rate</NavigationItem>\n        <NavigationItem link=\"/shortAnswers\">Short Answer Rate</NavigationItem>\n        <NavigationItem link=\"/requestsPerMin\">Requests Per Minute</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className='DrawerToggle' onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport './Toolbar.css';\n/* import Logo from '../../Logo/Logo';\n */\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className='Toolbar'>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n{/*         <div className={classes.Logo}>\n            <Logo />\n        </div>\n */}        <nav className='DesktopOnly'>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className='Backdrop' onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n/* import Logo from '../../Logo/Logo';\n */\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './SideDrawer.css';\n\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = ['SideDrawer', 'Close'];\n    if (props.open) {\n        attachedClasses = ['SideDrawer', 'Open'];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n{/*                 <div className={classes.Logo}>\n                    <Logo />\n                </div>\n */}                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport Aux from '../Aux/Aux';\nimport './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main classes='.Content'>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default Layout;","import React, {Component} from 'react';\nimport {BarChart, Bar, Cell, Tooltip} from 'recharts';\nimport rca, {pastel} from 'rainbow-colors-array';\n\nimport './RequestMethodsPie.css';\n\n\nclass RequestMethodsPie extends Component {\n  state = {\n    requests: {},\n    colors: {}\n  };\n\n  componentDidMount() {\n    fetch('/requests')\n      .then( res => res.json() )\n      .then(data => {\n          this.setState({ \n              requests: data,\n              colors: Object.values(rca(data.length, \"hex\", pastel))\n                .map(el => \"#\" + el.hex)\n          });\n       })\n  }\n\n  render() {\n    return (\n      <div>\n          <BarChart \n                width={1000} \n                height={700} \n                margin={{top: 150, right: 200, left: 400, bottom: 50}}\n                data={this.state.requests}>\n                <Bar dataKey=\"value\">\n                {\n                    Object.values(this.state.requests).map((entry, index) => (\n                      <Cell key={`cell-${index}`} \n                            fill={this.state.colors[index]}  \n                            strokeWidth={index === 2 ? 4 : 1}\n                      />))\n                }\n            </Bar>\n          </BarChart>          \n      </div>\n\n    );\n  }\n}\n\nexport default RequestMethodsPie;","import React, {Component} from 'react';\nimport {PieChart, Pie, Cell, Tooltip, BarChart, Bar} from 'recharts';\nimport rca, {pastel} from 'rainbow-colors-array';\n\nimport './AnswerCodesPie.css';\n\nclass AnswerCodesPie extends Component {\n  state = {\n    answers: {},\n    colors: {}\n  };\n\n  componentDidMount() {\n    fetch('/answers')\n      .then( res => res.json() )\n      .then( updatedAnswers => \n          this.setState({\n             answers: updatedAnswers,\n             colors: Object.values(rca(updatedAnswers.length, \"hex\", pastel))\n                  .map(el => \"#\" + el.hex)\n          }));\n  }\n\n  render() {\n    return (\n      <div>\n{/*           <PieChart width={1000} height={1000}>\n            <Pie dataKey=\"value\" \n                isAnimationActive={false} \n                data={this.state.answers} \n                cx={400} cy={400} \n                outerRadius={200} \n                fill=\"#8884d8\" \n                label=\"Answer Codes\">\n               {\n                  Object.values(this.state.answers).map((entry, index) => (\n                      <Cell key={`cell-${index}`} \n                            fill={this.state.colors[index]}/>\n                ))\n              }\n            </Pie>\n            <Tooltip/>\n          </PieChart>\n */}          <BarChart dataKey=\"value\"\n                width={1000} \n                height={700} \n                margin={{top: 150, right: 200, left: 400, bottom: 50}}\n                data={this.state.answers}>\n                <Bar dataKey=\"value\">\n                {\n                    Object.values(this.state.answers).map((entry, index) => (\n                      <Cell key={`cell-${index}`} \n                            fill={this.state.colors[index]}  \n                            strokeWidth={index === 2 ? 4 : 1}\n                      />))\n                }\n            </Bar>\n          </BarChart>          \n\n      </div>\n\n    );\n  }\n}\n\nexport default AnswerCodesPie;","import React, {Component} from 'react';\nimport {PieChart, Pie, Sector} from 'recharts';\nimport rca, {pastel} from 'rainbow-colors-array';\n\nimport './ShortAnswersDoughnut.css';\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n    fill, payload, percent, value } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? 'start' : 'end';\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill=\"#C2A993\"\n      />\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\"/>\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\"/>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`PV ${value}`}</text>\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n};\n\nclass ShortAnswersDoughnut extends Component {\n  \n   state= {\n      activeIndex: 0,\n      sizeDistribution: {},\n      colors: {}\n    };\n\n  onPieEnter(data, index) {\n    const updatedDistribution = {\n      ...this.state.sizeDistribution\n    };\n    const updatedColors = {\n      ...this.state.colors\n    };\n    this.setState({\n          activeIndex: index,\n          sizeDistribution: updatedDistribution,\n          colors: updatedColors\n    });\n  };\n\n  componentDidMount() {\n    fetch('/shortAnswers')\n      .then( res => res.json() )\n      .then( data => {\n        console.log(data[0].value);\n         this.setState({\n              activeIndex: 0,\n              sizeDistribution: \n                  [{name: 'LARGER than 1000B' , value: data[0].value.counterSize},\n                   {name: 'SMALLER than 1000B' , \n                          value: data[0].value.counter-data[0].value.counterSize}],\n              colors: Object.values(rca(2, \"hex\", pastel))\n                   .map(el => \"#\" + el.hex)\n          });\n        });\n  }\n\n  render() {\n    return (\n      <div>\n            <PieChart width={1000} height={800}>\n              <Pie \n                activeIndex={this.state.activeIndex}\n                activeShape={renderActiveShape} \n                data={this.state.sizeDistribution} \n                cx={700} \n                cy={450} \n                innerRadius={180}\n                outerRadius={200} \n                fill=\"#C2A223\"\n                onMouseEnter={this.onPieEnter}\n              />\n            </PieChart>\n    );\n    </div>\n\n    );\n  }\n}\n\nexport default ShortAnswersDoughnut;","import React, {Component} from 'react';\nimport {BarChart, Bar, Cell, Tooltip} from 'recharts';\nimport rca, {pastel} from 'rainbow-colors-array';\n\nimport './RequestsPerMinuteChart.css';\n\n\nclass RequestsPerMinuteChart extends Component {\n  state = {\n    reqsPerMin: {},\n    colors: {}\n  };\n\n  componentDidMount() {\n    fetch('/requestsPerMin')\n      .then( res => res.json() )\n      .then(data => {\n          this.setState({ \n              requests: data,\n              colors: Object.values(rca(data.length, \"hex\", pastel))\n                .map(el => \"#\" + el.hex)\n          });\n       })\n  }\n\n  render() {\n    return (\n      <div>\n          <BarChart \n                width={700} \n                height={700} data={this.state.reqsPerMin}>\n                <Bar dataKey=\"value\">\n                {\n                    Object.values(this.state.reqsPerMin).map((entry, index) => (\n                      <Cell key={`cell-${index}`} \n                            fill={this.state.colors[index]}  \n                            strokeWidth={index === 2 ? 4 : 1}\n                      />))\n                }\n            </Bar>\n          </BarChart>          \n      </div>\n\n    );\n  }\n}\n\nexport default RequestsPerMinuteChart;","import React from 'react';\n\nconst welcome = props => (\n  <div>\n    <h1>You may choose one of the data presentation modes for this log</h1>\n  </div>\n);\n\nexport default welcome;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Layout from './hoc/Layout/Layout';\nimport RequestMethodsPie from './containers/Charts/RequestMethodsPie';\nimport AnswerCodesPie from './containers/Charts/AnswerCodesPie';\nimport ShortAnswersDoughnut from './containers/Charts/ShortAnswersDoughnut';\nimport RequestsPerMinuteChart from './containers/Charts/RequestsPerMinuteChart';\n\n\nimport Welcome from './components/Welcome';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/requestMethods\" component={RequestMethodsPie} />\n            <Route path=\"/answerCodes\" component={AnswerCodesPie} />\n            <Route path=\"/shortAnswers\" component={ShortAnswersDoughnut} />\n            <Route path=\"/requestsPerMin\" component={RequestsPerMinuteChart} />\n            <Route path=\"/\" component={Welcome} exact />\n          </Switch>\n        </Layout>\n      </div>\n   );\n  } \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\nserviceWorker.unregister();\n"],"sourceRoot":""}